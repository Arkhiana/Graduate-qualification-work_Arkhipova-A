import numpy as np
from tensorflow.keras.models import load_model
import joblib

# Загрузка ранее сохраненной модели и scaler
# model.h5 содержит обученную нейронную сеть, а scaler.pkl - объект для нормализации данных.
model = load_model('/kaggle/working/model.h5')
scaler = joblib.load('/kaggle/working/scaler.pkl')

# Функция для предсказания соотношения матрица-наполнитель
def predict_matrix_ratio(input_features):
    # Преобразование входных данных в массив NumPy и изменение формы массива
    # reshape(1, -1) преобразует массив в форму, подходящую для модели (одна строка и нужное количество столбцов).
    input_array = np.array(input_features).reshape(1, -1)
    
    # Нормализация входных данных с использованием загруженного scaler
    input_scaled = scaler.transform(input_array)
    
    # Предсказание с использованием загруженной модели
    prediction = model.predict(input_scaled)
    
    # Возвращаем предсказанное значение
    return prediction[0][0]

# Консольное приложение для взаимодействия с пользователем
def console_app():
    print("Введите значения для следующих параметров:")
    
    # Список признаков, которые пользователь должен ввести
    feature_names = [
        "Угол нашивки, град", 
        "Шаг нашивки", 
        "Плотность нашивки", 
        "Плотность, кг/м3", 
        "Модуль упругости, ГПа", 
        "Количество отвердителя, м.%", 
        "Содержание эпоксидных групп,%_2", 
        "Температура вспышки, С_2", 
        "Поверхностная плотность, г/м2", 
        "Модуль упругости при растяжении, ГПа", 
        "Прочность при растяжении, МПа", 
        "Потребление смолы, г/м2"
    ]
    
    input_features = []
    
    # Запрашиваем значения для каждого признака у пользователя
    for feature in feature_names:
        value = input(f"{feature} (оставьте пустым, если нет данных): ")
        if value == "":
            value = 0.0  # Если пользователь оставил поле пустым, используем значение по умолчанию 0.0
        input_features.append(float(value))
    
    # Предсказание соотношения матрица-наполнитель
    predicted_ratio = predict_matrix_ratio(input_features)
    
    # Вывод результата предсказания
    print(f"\nПредсказанное соотношение матрица-наполнитель: {predicted_ratio:.4f}")

# Запуск консольного приложения
if __name__ == "__main__":
    console_app()
